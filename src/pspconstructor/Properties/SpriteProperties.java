package pspconstructor.Properties;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.GridLayout;
import java.io.File;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;
import pspconstructor.Components.GCHandler;
import pspconstructor.IOHandler;
import pspconstructor.Main;

/**
 *
 * @author Carlo
 */
public class SpriteProperties extends javax.swing.JInternalFrame {

    JFileChooser fchSprite = new JFileChooser();
    spriteDrawer spritePanel = new spriteDrawer();
    int Index;

    /** Creates new form SpriteProperties */
    public SpriteProperties(int index) {
        initComponents();
        fchSprite.addChoosableFileFilter(new imgFilter());
        fchSprite.setAcceptAllFileFilterUsed(false);
        pnlDrawing.setLayout(new GridLayout(1, 1));
        pnlDrawing.add(spritePanel);
        Index = index;
        getInfo();
        spritePanel.repaint();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlInfo = new javax.swing.JPanel();
        btnLoadSprite = new javax.swing.JButton();
        lblWidth = new javax.swing.JLabel();
        lblHeight = new javax.swing.JLabel();
        lblFile = new javax.swing.JLabel();
        txtFile = new javax.swing.JTextField();
        pnlOrigin = new javax.swing.JPanel();
        lblOriginX = new javax.swing.JLabel();
        txtOriginX = new javax.swing.JTextField();
        lblOriginY = new javax.swing.JLabel();
        txtOriginY = new javax.swing.JTextField();
        btnOriginSet = new javax.swing.JButton();
        btnOriginCenter = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();
        pnlDrawing = new javax.swing.JPanel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Sprite Properties");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/pspconstructor/Images/Sprite.png"))); // NOI18N

        pnlInfo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlInfo.setMaximumSize(new java.awt.Dimension(130, 348));
        pnlInfo.setMinimumSize(new java.awt.Dimension(130, 348));
        pnlInfo.setPreferredSize(new java.awt.Dimension(130, 348));

        btnLoadSprite.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pspconstructor/Images/Open.png"))); // NOI18N
        btnLoadSprite.setText("Load Sprite");
        btnLoadSprite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadSpriteActionPerformed(evt);
            }
        });

        lblWidth.setText("Width:");

        lblHeight.setText("Height:");

        lblFile.setText("File:");

        txtFile.setEditable(false);

        pnlOrigin.setBorder(javax.swing.BorderFactory.createTitledBorder("Origin"));

        lblOriginX.setText("X:");

        txtOriginX.setText("0");

        lblOriginY.setText("Y:");

        txtOriginY.setText("0");

        btnOriginSet.setText("Set");
        btnOriginSet.setPreferredSize(new java.awt.Dimension(100, 23));
        btnOriginSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOriginSetActionPerformed(evt);
            }
        });

        btnOriginCenter.setText("Center");
        btnOriginCenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOriginCenterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlOriginLayout = new javax.swing.GroupLayout(pnlOrigin);
        pnlOrigin.setLayout(pnlOriginLayout);
        pnlOriginLayout.setHorizontalGroup(
            pnlOriginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOriginLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOriginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlOriginLayout.createSequentialGroup()
                        .addComponent(lblOriginX)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtOriginX, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))
                    .addGroup(pnlOriginLayout.createSequentialGroup()
                        .addComponent(lblOriginY)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtOriginY, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))
                    .addComponent(btnOriginCenter, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(btnOriginSet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlOriginLayout.setVerticalGroup(
            pnlOriginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOriginLayout.createSequentialGroup()
                .addGroup(pnlOriginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOriginX)
                    .addComponent(txtOriginX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlOriginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOriginY)
                    .addComponent(txtOriginY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOriginSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOriginCenter)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pspconstructor/Images/Check.png"))); // NOI18N
        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlInfoLayout = new javax.swing.GroupLayout(pnlInfo);
        pnlInfo.setLayout(pnlInfoLayout);
        pnlInfoLayout.setHorizontalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOk, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(btnLoadSprite, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addComponent(lblFile)
                        .addGap(18, 18, 18)
                        .addComponent(txtFile, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))
                    .addComponent(lblWidth)
                    .addComponent(lblHeight)
                    .addComponent(pnlOrigin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlInfoLayout.setVerticalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLoadSprite)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFile)
                    .addComponent(txtFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblWidth)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHeight)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlOrigin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(btnOk)
                .addContainerGap())
        );

        pnlDrawing.setBackground(java.awt.Color.gray);
        pnlDrawing.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlDrawing.setMaximumSize(new java.awt.Dimension(300, 300));
        pnlDrawing.setMinimumSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout pnlDrawingLayout = new javax.swing.GroupLayout(pnlDrawing);
        pnlDrawing.setLayout(pnlDrawingLayout);
        pnlDrawingLayout.setHorizontalGroup(
            pnlDrawingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 382, Short.MAX_VALUE)
        );
        pnlDrawingLayout.setVerticalGroup(
            pnlDrawingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 346, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(pnlInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDrawing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlDrawing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void getInfo() {
        spritePanel.imgSprite = GCHandler.Sprites.get(Index).Image;
        spritePanel.setOrigin(GCHandler.Sprites.get(Index).OriginX, GCHandler.Sprites.get(Index).OriginY);
        txtOriginX.setText("" + GCHandler.Sprites.get(Index).OriginX);
        txtOriginY.setText("" + GCHandler.Sprites.get(Index).OriginY);
        lblWidth.setText("Width: " + GCHandler.Sprites.get(Index).Width);
        lblHeight.setText("Height: " + GCHandler.Sprites.get(Index).Height);
        txtFile.setText(GCHandler.Sprites.get(Index).Filename);
    }

    public void setInfo() {
        GCHandler.Sprites.get(Index).setFileName(txtFile.getText());
        GCHandler.Sprites.get(Index).setImage(spritePanel.imgSprite);
        GCHandler.Sprites.get(Index).setWidth(spritePanel.imgSprite.getIconWidth());
        GCHandler.Sprites.get(Index).setHeight(spritePanel.imgSprite.getIconHeight());
        GCHandler.Sprites.get(Index).setOriginX(spritePanel.OriginX);
        GCHandler.Sprites.get(Index).setOriginY(spritePanel.OriginY);
        Main.logMain.repaint();
    }

    private void btnLoadSpriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadSpriteActionPerformed
        if (fchSprite.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File out = new File("./Source/Game/Game/Res/sprite" + GCHandler.Sprites.get(Index).ID + "." + IOHandler.getExtension(fchSprite.getSelectedFile()));
            try {
                IOHandler.copyFile(new File(fchSprite.getSelectedFile().getPath()), out);
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            spritePanel.imgSprite = new ImageIcon(fchSprite.getSelectedFile().getPath());
            lblWidth.setText("Width: " + spritePanel.imgSprite.getIconWidth());
            lblHeight.setText("Height: " + spritePanel.imgSprite.getIconHeight());
            txtFile.setText(fchSprite.getSelectedFile().getName());
            txtFile.setEditable(false);
        }
        spritePanel.repaint();
}//GEN-LAST:event_btnLoadSpriteActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        setInfo();
        this.dispose();
}//GEN-LAST:event_btnOkActionPerformed

    private void btnOriginSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOriginSetActionPerformed
        try {
            spritePanel.setOrigin(Integer.parseInt(txtOriginX.getText()), Integer.parseInt(txtOriginY.getText()));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Input Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        spritePanel.repaint();
}//GEN-LAST:event_btnOriginSetActionPerformed

    private void btnOriginCenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOriginCenterActionPerformed
        spritePanel.setOrigin(spritePanel.imgSprite.getImage().getWidth(null) / 2, spritePanel.imgSprite.getImage().getHeight(null) / 2);
        txtOriginX.setText(String.valueOf((int) (spritePanel.imgSprite.getImage().getWidth(null) / 2)));
        txtOriginY.setText(String.valueOf((int) (spritePanel.imgSprite.getImage().getHeight(null) / 2)));
        spritePanel.repaint();
    }//GEN-LAST:event_btnOriginCenterActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLoadSprite;
    public javax.swing.JButton btnOk;
    private javax.swing.JButton btnOriginCenter;
    private javax.swing.JButton btnOriginSet;
    private javax.swing.JLabel lblFile;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblOriginX;
    private javax.swing.JLabel lblOriginY;
    private javax.swing.JLabel lblWidth;
    private javax.swing.JPanel pnlDrawing;
    private javax.swing.JPanel pnlInfo;
    private javax.swing.JPanel pnlOrigin;
    private javax.swing.JTextField txtFile;
    private javax.swing.JTextField txtOriginX;
    private javax.swing.JTextField txtOriginY;
    // End of variables declaration//GEN-END:variables
}

class imgFilter extends FileFilter {

    String getExtension(File f) {
        String ext = null;
        String s = f.getName();
        int i = s.lastIndexOf('.');

        if (i > 0 && i < s.length() - 1) {
            ext = s.substring(i + 1).toLowerCase();
        }
        return ext;
    }

    public boolean accept(File f) {
        if (f.isDirectory()) {
            return true;
        }
        String extension = getExtension(f);
        if (extension != null) {
            if (extension.equals("gif") ||
                    extension.equals("jpeg") ||
                    extension.equals("jpg") ||
                    extension.equals("png")) {
                return true;
            } else {
                return false;
            }
        }
        return false;
    }

    public String getDescription() {
        return "Images: '.jpg','.jpeg','.png','.gif'";
    }
}

class spriteDrawer extends JPanel {

    ImageIcon imgSprite = new ImageIcon(getClass().getResource("/pspconstructor/Images/BlankSprite.png"));
    int OriginX = 0, OriginY = 0;

    spriteDrawer() {
        super();
    }

    void setOrigin(int X, int Y) {
        OriginX = X;
        OriginY = Y;
    }

    @Override
    public void paint(Graphics g) {
        g.setColor(Color.GRAY);
        g.fillRect(0, 0, this.getWidth(), this.getHeight());
        g.drawImage(imgSprite.getImage(), 0, 0, null);
        g.setColor(Color.RED);
        g.drawLine(OriginX, 0, OriginX, imgSprite.getIconHeight());
        g.drawLine(0, OriginY, imgSprite.getIconWidth(), OriginY);
    }
}
